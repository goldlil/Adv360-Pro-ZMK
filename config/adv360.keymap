#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tlb: toggle_layer_balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "TOGLE_LAYER_BALANCED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };

        thb: tap_hold_balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "THB";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp C_VOLUME_UP  &kp N1  &kp N2     &kp UP_ARROW    &kp N4     &kp N5  &tog 0                                                                     &mo 2                  &kp N6  &kp N7        &kp DOWN           &kp N9             &kp N0     &kp MINUS
&kp C_VOL_DN     &kp Q   &kp W      &kp L           &kp P      &kp B   &none                                                                      &kp F18                &kp J   &kp F         &kp U              &kp Y              &kp P      &kp BSLH
&kp ESC          &kp A   &kp R      &kp S           &kp T      &kp G   &none          &kp LCTRL    &kp LALT              &kp LGUI   &kp LEFT_ALT  &kp F12                &kp M   &tlb 2 N      &tlb 4 E           &kp I              &kp O      &kp RIGHT
&kp LSHFT        &kp Z   &kp V      &tlb 3 C        &kp D      &kp X                               &none                 &none                                           &kp Q   &kp H         &tlb 1 ESCAPE      &kp KP_DOT         &kp K      &kp LEFT_SHIFT
&kp Q            &kp H   &kp LG(E)  &kp LEFT_ARROW  &kp RIGHT          &kp BACKSPACE  &kp PAGE_UP  &kp LEFT_COMMAND      &kp COMMA  &kp ENTER     &thb LEFT_SHIFT SPACE          &kp KP_COMMA  &kp LA(BACKSPACE)  &kp LG(BACKSPACE)  &kp COMMA  &kp ENTER
            >;
        };

        characters {
            bindings = <
&kp F1  &kp F2           &kp HASH   &kp ASTERISK            &kp ASTRK          &kp F6            &tog 0                                                        &mo 2                    &kp F7  &kp F8     &kp F9  &kp F10   &kp F11  &kp F12
&trans  &trans           &kp MINUS  &kp DOLLAR              &kp UNDER          &kp PLUS          &trans                                                        &trans                   &trans  &trans     &trans  &trans    &trans   &trans
&trans  &kp QUESTION     &kp SLASH  &kp KP_EQUAL            &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &trans  &trans  &trans      &trans    &trans                  &trans                   &trans  &kp PIPE   &trans  &trans    &trans   &trans
&trans  &kp EXCLAMATION  &kp COLON  &kp SEMICOLON           &kp GRAVE          &kp PERCENT                       &trans      &trans                                                     &trans  &kp CARET  &trans  &kp PIPE  &trans   &trans
&trans  &trans           &trans     &kp LS(LA(LEFT_ARROW))  &kp LS(LA(RIGHT))                    &trans  &trans  &trans      &kp PLUS  &kp LS(LA(LEFT_ARROW))  &kp LS(LA(RIGHT_ARROW))          &trans     &trans  &trans    &trans   &trans
            >;
        };

        character_2 {
            bindings = <
&trans  &trans         &trans            &trans             &trans                 &trans  &trans                                               &trans       &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans  &trans         &kp AMPERSAND     &kp AT_SIGN        &kp TILDE              &trans  &bootloader                                          &bootloader  &trans        &trans           &trans         &trans        &trans        &trans
&trans  &kp BACKSLASH  &kp LEFT_BRACE    &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &trans  &trans       &trans  &trans      &bt BT_CLR  &trans  &trans       &trans        &trans           &kp LESS_THAN  &trans        &trans        &trans
&trans  &trans         &kp RIGHT_BRACE   &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &trans                       &trans      &trans                           &trans        &trans           &trans         &trans        &trans        &trans
&trans  &trans         &kp GREATER_THAN  &trans             &trans                         &trans       &trans  &trans      &trans      &trans  &trans                     &rgb_ug RGB_TOG  &bl BL_TOG     &trans        &trans        &bl BL_TOG
            >;
        };

        c-layer {
            bindings = <
&trans  &trans         &trans             &trans           &trans  &trans  &trans                                      &trans  &trans         &trans         &trans         &trans         &trans         &trans
&trans  &trans         &trans             &trans           &trans  &trans  &trans                                      &trans  &trans         &kp RC(RG(F))  &kp RC(RG(U))  &kp RC(RG(Y))  &trans         &trans
&trans  &trans         &trans             &trans           &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp RC(RG(M))  &kp RC(RG(N))  &kp RC(RG(E))  &kp RC(RG(I))  &kp RC(RG(O))  &trans
&trans  &trans         &trans             &trans           &trans  &trans                  &trans      &trans                  &trans         &trans         &macro_ver     &slack_macro   &slack_macro1  &trans
&trans  &kp RC(RG(H))  &kp RC(RG(COMMA))  &kp RC(RG(DOT))  &trans          &trans  &trans  &trans      &trans  &trans  &trans                 &trans         &trans         &trans         &trans         &trans
            >;
        };

        keypad-new {
            bindings = <
&trans  &trans  &trans           &trans              &trans               &trans  &trans                                                  &trans               &trans  &trans        &trans           &trans  &trans  &trans
&trans  &trans  &kp N7           &kp N8              &kp N9               &trans  &trans                                                  &trans               &trans  &trans        &trans           &trans  &trans  &trans
&trans  &trans  &kp N4           &kp N5              &kp N6               &trans  &trans  &trans  &trans      &trans  &trans              &trans               &trans  &trans        &trans           &trans  &trans  &trans
&trans  &trans  &kp KP_NUMBER_1  &kp N2              &kp N3               &trans                  &trans      &trans                                           &trans  &trans        &trans           &trans  &trans  &trans
&trans  &trans  &trans           &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)          &trans  &trans  &trans      &trans  &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)          &kp LG(BSPC)  &kp KP_NUMBER_0  &trans  &trans  &kp LS(ENTER)
            >;
        };
    };
};
